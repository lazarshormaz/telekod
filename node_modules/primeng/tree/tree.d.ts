import { AfterContentInit, OnDestroy, EventEmitter, OnInit, QueryList, TemplateRef, ElementRef } from '@angular/core';
import { TreeNode } from 'primeng/api';
import { TreeDragDropService } from 'primeng/api';
import { Subscription } from 'rxjs';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class UITreeNode implements OnInit {
    static ICON_CLASS: string;
    node: TreeNode;
    parentNode: TreeNode;
    root: boolean;
    index: number;
    firstChild: boolean;
    lastChild: boolean;
    tree: Tree;
    constructor(tree: any);
    draghoverPrev: boolean;
    draghoverNext: boolean;
    draghoverNode: boolean;
    ngOnInit(): void;
    getIcon(): string;
    isLeaf(): boolean;
    toggle(event: Event): void;
    expand(event: Event): void;
    collapse(event: Event): void;
    onNodeClick(event: MouseEvent): void;
    onNodeKeydown(event: KeyboardEvent): void;
    onNodeTouchEnd(): void;
    onNodeRightClick(event: MouseEvent): void;
    isSelected(): boolean;
    onDropPoint(event: Event, position: number): void;
    processPointDrop(dragNode: any, dragNodeIndex: any, position: any): void;
    onDropPointDragOver(event: any): void;
    onDropPointDragEnter(event: Event, position: number): void;
    onDropPointDragLeave(event: Event): void;
    onDragStart(event: any): void;
    onDragStop(event: any): void;
    onDropNodeDragOver(event: any): void;
    onDropNode(event: any): void;
    processNodeDrop(dragNode: any): void;
    onDropNodeDragEnter(event: any): void;
    onDropNodeDragLeave(event: any): void;
    onKeyDown(event: KeyboardEvent): void;
    findNextSiblingOfAncestor(nodeElement: any): any;
    findLastVisibleDescendant(nodeElement: any): any;
    getParentNodeElement(nodeElement: any): any;
    focusNode(element: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UITreeNode, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<UITreeNode, "p-treeNode", never, { "node": "node"; "parentNode": "parentNode"; "root": "root"; "index": "index"; "firstChild": "firstChild"; "lastChild": "lastChild"; }, {}, never, never>;
}
export declare class Tree implements OnInit, AfterContentInit, OnDestroy, BlockableUI {
    el: ElementRef;
    dragDropService: TreeDragDropService;
    value: TreeNode[];
    selectionMode: string;
    selection: any;
    selectionChange: EventEmitter<any>;
    onNodeSelect: EventEmitter<any>;
    onNodeUnselect: EventEmitter<any>;
    onNodeExpand: EventEmitter<any>;
    onNodeCollapse: EventEmitter<any>;
    onNodeContextMenuSelect: EventEmitter<any>;
    onNodeDrop: EventEmitter<any>;
    style: any;
    styleClass: string;
    contextMenu: any;
    layout: string;
    draggableScope: any;
    droppableScope: any;
    draggableNodes: boolean;
    droppableNodes: boolean;
    metaKeySelection: boolean;
    propagateSelectionUp: boolean;
    propagateSelectionDown: boolean;
    loading: boolean;
    loadingIcon: string;
    emptyMessage: string;
    ariaLabel: string;
    ariaLabelledBy: string;
    validateDrop: boolean;
    filter: boolean;
    filterBy: string;
    filterMode: string;
    filterPlaceholder: string;
    filterLocale: string;
    onFilter: EventEmitter<any>;
    nodeTrackBy: Function;
    templates: QueryList<any>;
    templateMap: any;
    nodeTouched: boolean;
    dragNodeTree: Tree;
    dragNode: TreeNode;
    dragNodeSubNodes: TreeNode[];
    dragNodeIndex: number;
    dragNodeScope: any;
    dragHover: boolean;
    dragStartSubscription: Subscription;
    dragStopSubscription: Subscription;
    filteredNodes: TreeNode[];
    constructor(el: ElementRef, dragDropService: TreeDragDropService);
    ngOnInit(): void;
    readonly horizontal: boolean;
    ngAfterContentInit(): void;
    onNodeClick(event: any, node: TreeNode): void;
    onNodeTouchEnd(): void;
    onNodeRightClick(event: MouseEvent, node: TreeNode): void;
    findIndexInSelection(node: TreeNode): number;
    syncNodeOption(node: any, parentNodes: any, option: any, value?: any): void;
    hasFilteredNodes(): number;
    getNodeWithKey(key: string, nodes: TreeNode[]): any;
    propagateUp(node: TreeNode, select: boolean): void;
    propagateDown(node: TreeNode, select: boolean): void;
    isSelected(node: TreeNode): boolean;
    isSingleSelectionMode(): boolean;
    isMultipleSelectionMode(): boolean;
    isCheckboxSelectionMode(): boolean;
    isNodeLeaf(node: any): boolean;
    getRootNode(): TreeNode[];
    getTemplateForNode(node: TreeNode): TemplateRef<any>;
    onDragOver(event: any): void;
    onDrop(event: any): void;
    onDragEnter(event: any): void;
    onDragLeave(event: any): void;
    allowDrop(dragNode: TreeNode, dropNode: TreeNode, dragNodeScope: any): boolean;
    isValidDragScope(dragScope: any): boolean;
    _filter(event: any): void;
    findFilteredNodes(node: any, paramsWithoutNode: any): boolean;
    isFilterMatched(node: any, { searchFields, filterText, isStrictMode }: {
        searchFields: any;
        filterText: any;
        isStrictMode: any;
    }): boolean;
    getBlockableElement(): HTMLElement;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Tree, [null, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Tree, "p-tree", never, { "layout": "layout"; "metaKeySelection": "metaKeySelection"; "propagateSelectionUp": "propagateSelectionUp"; "propagateSelectionDown": "propagateSelectionDown"; "loadingIcon": "loadingIcon"; "emptyMessage": "emptyMessage"; "filterBy": "filterBy"; "filterMode": "filterMode"; "nodeTrackBy": "nodeTrackBy"; "selection": "selection"; "value": "value"; "selectionMode": "selectionMode"; "style": "style"; "styleClass": "styleClass"; "contextMenu": "contextMenu"; "draggableScope": "draggableScope"; "droppableScope": "droppableScope"; "draggableNodes": "draggableNodes"; "droppableNodes": "droppableNodes"; "loading": "loading"; "ariaLabel": "ariaLabel"; "ariaLabelledBy": "ariaLabelledBy"; "validateDrop": "validateDrop"; "filter": "filter"; "filterPlaceholder": "filterPlaceholder"; "filterLocale": "filterLocale"; }, { "selectionChange": "selectionChange"; "onNodeSelect": "onNodeSelect"; "onNodeUnselect": "onNodeUnselect"; "onNodeExpand": "onNodeExpand"; "onNodeCollapse": "onNodeCollapse"; "onNodeContextMenuSelect": "onNodeContextMenuSelect"; "onNodeDrop": "onNodeDrop"; "onFilter": "onFilter"; }, ["templates"], never>;
}
export declare class TreeModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<TreeModule, [typeof Tree, typeof UITreeNode], [typeof ɵngcc1.CommonModule], [typeof Tree, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<TreeModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5kLnRzIiwic291cmNlcyI6WyJ0cmVlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRyZWVOb2RlIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgVHJlZURyYWdEcm9wU2VydmljZSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQmxvY2thYmxlVUkgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBVSVRyZWVOb2RlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBzdGF0aWMgSUNPTl9DTEFTUzogc3RyaW5nO1xuICAgIG5vZGU6IFRyZWVOb2RlO1xuICAgIHBhcmVudE5vZGU6IFRyZWVOb2RlO1xuICAgIHJvb3Q6IGJvb2xlYW47XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBmaXJzdENoaWxkOiBib29sZWFuO1xuICAgIGxhc3RDaGlsZDogYm9vbGVhbjtcbiAgICB0cmVlOiBUcmVlO1xuICAgIGNvbnN0cnVjdG9yKHRyZWU6IGFueSk7XG4gICAgZHJhZ2hvdmVyUHJldjogYm9vbGVhbjtcbiAgICBkcmFnaG92ZXJOZXh0OiBib29sZWFuO1xuICAgIGRyYWdob3Zlck5vZGU6IGJvb2xlYW47XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBnZXRJY29uKCk6IHN0cmluZztcbiAgICBpc0xlYWYoKTogYm9vbGVhbjtcbiAgICB0b2dnbGUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBleHBhbmQoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBjb2xsYXBzZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIG9uTm9kZUNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICBvbk5vZGVLZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBvbk5vZGVUb3VjaEVuZCgpOiB2b2lkO1xuICAgIG9uTm9kZVJpZ2h0Q2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIGlzU2VsZWN0ZWQoKTogYm9vbGVhbjtcbiAgICBvbkRyb3BQb2ludChldmVudDogRXZlbnQsIHBvc2l0aW9uOiBudW1iZXIpOiB2b2lkO1xuICAgIHByb2Nlc3NQb2ludERyb3AoZHJhZ05vZGU6IGFueSwgZHJhZ05vZGVJbmRleDogYW55LCBwb3NpdGlvbjogYW55KTogdm9pZDtcbiAgICBvbkRyb3BQb2ludERyYWdPdmVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRHJvcFBvaW50RHJhZ0VudGVyKGV2ZW50OiBFdmVudCwgcG9zaXRpb246IG51bWJlcik6IHZvaWQ7XG4gICAgb25Ecm9wUG9pbnREcmFnTGVhdmUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbkRyYWdTdGFydChldmVudDogYW55KTogdm9pZDtcbiAgICBvbkRyYWdTdG9wKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRHJvcE5vZGVEcmFnT3ZlcihldmVudDogYW55KTogdm9pZDtcbiAgICBvbkRyb3BOb2RlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByb2Nlc3NOb2RlRHJvcChkcmFnTm9kZTogYW55KTogdm9pZDtcbiAgICBvbkRyb3BOb2RlRHJhZ0VudGVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRHJvcE5vZGVEcmFnTGVhdmUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25LZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBmaW5kTmV4dFNpYmxpbmdPZkFuY2VzdG9yKG5vZGVFbGVtZW50OiBhbnkpOiBhbnk7XG4gICAgZmluZExhc3RWaXNpYmxlRGVzY2VuZGFudChub2RlRWxlbWVudDogYW55KTogYW55O1xuICAgIGdldFBhcmVudE5vZGVFbGVtZW50KG5vZGVFbGVtZW50OiBhbnkpOiBhbnk7XG4gICAgZm9jdXNOb2RlKGVsZW1lbnQ6IGFueSk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUcmVlIGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3ksIEJsb2NrYWJsZVVJIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBkcmFnRHJvcFNlcnZpY2U6IFRyZWVEcmFnRHJvcFNlcnZpY2U7XG4gICAgdmFsdWU6IFRyZWVOb2RlW107XG4gICAgc2VsZWN0aW9uTW9kZTogc3RyaW5nO1xuICAgIHNlbGVjdGlvbjogYW55O1xuICAgIHNlbGVjdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Ob2RlU2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk5vZGVVbnNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Ob2RlRXhwYW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk5vZGVDb2xsYXBzZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Ob2RlQ29udGV4dE1lbnVTZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uTm9kZURyb3A6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGNvbnRleHRNZW51OiBhbnk7XG4gICAgbGF5b3V0OiBzdHJpbmc7XG4gICAgZHJhZ2dhYmxlU2NvcGU6IGFueTtcbiAgICBkcm9wcGFibGVTY29wZTogYW55O1xuICAgIGRyYWdnYWJsZU5vZGVzOiBib29sZWFuO1xuICAgIGRyb3BwYWJsZU5vZGVzOiBib29sZWFuO1xuICAgIG1ldGFLZXlTZWxlY3Rpb246IGJvb2xlYW47XG4gICAgcHJvcGFnYXRlU2VsZWN0aW9uVXA6IGJvb2xlYW47XG4gICAgcHJvcGFnYXRlU2VsZWN0aW9uRG93bjogYm9vbGVhbjtcbiAgICBsb2FkaW5nOiBib29sZWFuO1xuICAgIGxvYWRpbmdJY29uOiBzdHJpbmc7XG4gICAgZW1wdHlNZXNzYWdlOiBzdHJpbmc7XG4gICAgYXJpYUxhYmVsOiBzdHJpbmc7XG4gICAgYXJpYUxhYmVsbGVkQnk6IHN0cmluZztcbiAgICB2YWxpZGF0ZURyb3A6IGJvb2xlYW47XG4gICAgZmlsdGVyOiBib29sZWFuO1xuICAgIGZpbHRlckJ5OiBzdHJpbmc7XG4gICAgZmlsdGVyTW9kZTogc3RyaW5nO1xuICAgIGZpbHRlclBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgZmlsdGVyTG9jYWxlOiBzdHJpbmc7XG4gICAgb25GaWx0ZXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG5vZGVUcmFja0J5OiBGdW5jdGlvbjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIHRlbXBsYXRlTWFwOiBhbnk7XG4gICAgbm9kZVRvdWNoZWQ6IGJvb2xlYW47XG4gICAgZHJhZ05vZGVUcmVlOiBUcmVlO1xuICAgIGRyYWdOb2RlOiBUcmVlTm9kZTtcbiAgICBkcmFnTm9kZVN1Yk5vZGVzOiBUcmVlTm9kZVtdO1xuICAgIGRyYWdOb2RlSW5kZXg6IG51bWJlcjtcbiAgICBkcmFnTm9kZVNjb3BlOiBhbnk7XG4gICAgZHJhZ0hvdmVyOiBib29sZWFuO1xuICAgIGRyYWdTdGFydFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIGRyYWdTdG9wU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgZmlsdGVyZWROb2RlczogVHJlZU5vZGVbXTtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgZHJhZ0Ryb3BTZXJ2aWNlOiBUcmVlRHJhZ0Ryb3BTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHJlYWRvbmx5IGhvcml6b250YWw6IGJvb2xlYW47XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgb25Ob2RlQ2xpY2soZXZlbnQ6IGFueSwgbm9kZTogVHJlZU5vZGUpOiB2b2lkO1xuICAgIG9uTm9kZVRvdWNoRW5kKCk6IHZvaWQ7XG4gICAgb25Ob2RlUmlnaHRDbGljayhldmVudDogTW91c2VFdmVudCwgbm9kZTogVHJlZU5vZGUpOiB2b2lkO1xuICAgIGZpbmRJbmRleEluU2VsZWN0aW9uKG5vZGU6IFRyZWVOb2RlKTogbnVtYmVyO1xuICAgIHN5bmNOb2RlT3B0aW9uKG5vZGU6IGFueSwgcGFyZW50Tm9kZXM6IGFueSwgb3B0aW9uOiBhbnksIHZhbHVlPzogYW55KTogdm9pZDtcbiAgICBoYXNGaWx0ZXJlZE5vZGVzKCk6IG51bWJlcjtcbiAgICBnZXROb2RlV2l0aEtleShrZXk6IHN0cmluZywgbm9kZXM6IFRyZWVOb2RlW10pOiBhbnk7XG4gICAgcHJvcGFnYXRlVXAobm9kZTogVHJlZU5vZGUsIHNlbGVjdDogYm9vbGVhbik6IHZvaWQ7XG4gICAgcHJvcGFnYXRlRG93bihub2RlOiBUcmVlTm9kZSwgc2VsZWN0OiBib29sZWFuKTogdm9pZDtcbiAgICBpc1NlbGVjdGVkKG5vZGU6IFRyZWVOb2RlKTogYm9vbGVhbjtcbiAgICBpc1NpbmdsZVNlbGVjdGlvbk1vZGUoKTogYm9vbGVhbjtcbiAgICBpc011bHRpcGxlU2VsZWN0aW9uTW9kZSgpOiBib29sZWFuO1xuICAgIGlzQ2hlY2tib3hTZWxlY3Rpb25Nb2RlKCk6IGJvb2xlYW47XG4gICAgaXNOb2RlTGVhZihub2RlOiBhbnkpOiBib29sZWFuO1xuICAgIGdldFJvb3ROb2RlKCk6IFRyZWVOb2RlW107XG4gICAgZ2V0VGVtcGxhdGVGb3JOb2RlKG5vZGU6IFRyZWVOb2RlKTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBvbkRyYWdPdmVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRHJvcChldmVudDogYW55KTogdm9pZDtcbiAgICBvbkRyYWdFbnRlcihldmVudDogYW55KTogdm9pZDtcbiAgICBvbkRyYWdMZWF2ZShldmVudDogYW55KTogdm9pZDtcbiAgICBhbGxvd0Ryb3AoZHJhZ05vZGU6IFRyZWVOb2RlLCBkcm9wTm9kZTogVHJlZU5vZGUsIGRyYWdOb2RlU2NvcGU6IGFueSk6IGJvb2xlYW47XG4gICAgaXNWYWxpZERyYWdTY29wZShkcmFnU2NvcGU6IGFueSk6IGJvb2xlYW47XG4gICAgX2ZpbHRlcihldmVudDogYW55KTogdm9pZDtcbiAgICBmaW5kRmlsdGVyZWROb2Rlcyhub2RlOiBhbnksIHBhcmFtc1dpdGhvdXROb2RlOiBhbnkpOiBib29sZWFuO1xuICAgIGlzRmlsdGVyTWF0Y2hlZChub2RlOiBhbnksIHsgc2VhcmNoRmllbGRzLCBmaWx0ZXJUZXh0LCBpc1N0cmljdE1vZGUgfToge1xuICAgICAgICBzZWFyY2hGaWVsZHM6IGFueTtcbiAgICAgICAgZmlsdGVyVGV4dDogYW55O1xuICAgICAgICBpc1N0cmljdE1vZGU6IGFueTtcbiAgICB9KTogYm9vbGVhbjtcbiAgICBnZXRCbG9ja2FibGVFbGVtZW50KCk6IEhUTUxFbGVtZW50O1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUcmVlTW9kdWxlIHtcbn1cbiJdfQ==